---
import MainLayout from "../../layout/MainLayout.astro";
import { getCollection } from "astro:content";
const pageTitle = "M Durrani | Fiction";

// Get all screenplays and stories
const screenplays = await getCollection("writing/screenplays");
const stories = await getCollection("writing/short-stories");

// Separate TV and Film screenplays
const tvScreenplays = screenplays
  .filter(screenplay => screenplay.id.startsWith('tv/'))
  .sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime());

const filmScreenplays = screenplays
  .filter(screenplay => screenplay.id.startsWith('film/'))
  .sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime());

const sortedStories = stories.sort((a, b) => 
  b.data.publishDate.getTime() - a.data.publishDate.getTime()
);
---

<MainLayout pageTitle={pageTitle}>
  <div class="container writing-page">
    <header class="page-header">
      <h1>Fiction</h1>
      <p class="subtitle">A collection of screenplays and short stories exploring themes of technology, identity, and human connection.</p>
    </header>

    <div class="fiction-content">
      <!-- TV Screenplays Section -->
      <section class="fiction-section">
        <div class="section-header">
          <h2>TV Screenplays</h2>
          <div class="section-accent"></div>
        </div>
        <div class="entries-grid">
          {tvScreenplays.map(screenplay => (
            <article class="fiction-entry">
              <div class="entry-content">
                <span class="entry-type">TV Series</span>
                <h3>{screenplay.data.title}</h3>
                <p class="logline">{screenplay.data.logline}</p>
                <div class="entry-footer">
                  <span class="entry-date">
                    {screenplay.data.publishDate.toLocaleDateString(undefined, {
                      year: 'numeric',
                      month: 'long'
                    })}
                  </span>
                  <a href={`/writing/screenplays/${screenplay.slug}`} class="read-more">
                    Project Details →
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>
      </section>

      <!-- Film Screenplays Section -->
      <section class="fiction-section">
        <div class="section-header">
          <h2>Film Screenplays</h2>
          <div class="section-accent"></div>
        </div>
        <div class="entries-grid">
          {filmScreenplays.map(screenplay => (
            <article class="fiction-entry">
              <div class="entry-content">
                <span class="entry-type">Feature Film</span>
                <h3>{screenplay.data.title}</h3>
                <p class="logline">{screenplay.data.logline}</p>
                <div class="entry-footer">
                  <span class="entry-date">
                    {screenplay.data.publishDate.toLocaleDateString(undefined, {
                      year: 'numeric',
                      month: 'long'
                    })}
                  </span>
                  <a href={`/writing/screenplays/${screenplay.slug}`} class="read-more">
                    Project Details →
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>
      </section>

      <!-- Short Stories Section -->
       <section class="fiction-section">
        <div class="section-header">
          <h2>Short Stories</h2>
          <div class="section-accent"></div>
        </div>
        <div class="entries-grid">
          {sortedStories.map(story => (
            <article class="fiction-entry">
              <div class="entry-content">
                <span class="entry-type">Short Story</span>
                <h3>{story.data.title}</h3>
                <p class="logline">{story.data.description}</p>
                <div class="entry-footer">
                  <span class="entry-date">
                    {story.data.publishDate.toLocaleDateString(undefined, {
                      year: 'numeric',
                      month: 'long'
                    })}
                  </span>
                  <a href={`/writing/short-stories/${story.slug}`} class="read-story">
                    Read Story →
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>
      </section>
    </div>
  </div>
</MainLayout>

<style>
    .fiction-content {
    max-width: 72rem;
    margin: 0 auto;
  }

  .fiction-section {
    margin-bottom: 5rem;
  }

  .section-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid hsla(0, 0%, 100%, 0.1);
  }

  .entries-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(min(100%, 24rem), 1fr));
    gap: 2rem;
  }

  .fiction-entry {
    background: hsla(0, 0%, 10%, 0.6);
    border-radius: 0.75rem;
    border: 1px solid hsla(0, 0%, 100%, 0.08);
    overflow: hidden;
    transition: all 0.3s ease;
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }

  .fiction-entry:hover {
    transform: translateY(-4px);
    border-color: hsla(0, 0%, 100%, 0.15);
    box-shadow: 
      0 4px 20px rgba(0, 0, 0, 0.2),
      0 0 16px rgba(255, 255, 255, 0.05);
  }

  .entry-content {
    padding: 2rem;
  }

  .entry-type {
    display: inline-block;
    font-size: 0.85rem;
    font-weight: 600;
    color: hsla(0, 0%, 100%, 0.7);
    margin-bottom: 0.75rem;
    padding: 0.35rem 1rem;
    background: hsla(0, 0%, 100%, 0.08);
    border-radius: 2rem;
  }

  .logline {
    color: var(--text-muted);
    margin: 0.75rem 0 1.5rem;
    line-height: 1.6;
  }

  .entry-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: auto;
    padding-top: 1rem;
    border-top: 1px solid hsla(0, 0%, 100%, 0.08);
  }

  .entry-date {
    font-size: 0.9rem;
    color: hsla(0, 0%, 100%, 0.5);
  }

  .read-script,
  .read-story {
    color: white;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.2s ease;
  }

  .read-script:hover,
  .read-story:hover {
    text-shadow: 0 0 8px hsla(0, 0%, 100%, 0.5);
  }

  @media (max-width: 768px) {
    .entries-grid {
      grid-template-columns: 1fr;
    }

    .entry-content {
      padding: 1.5rem;
    }
  }

  .read-more,
  .read-story {
    color: white;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.2s ease;
  }

  .read-more:hover,
  .read-story:hover {
    text-shadow: 0 0 8px hsla(0, 0%, 100%, 0.5);
  }
</style>