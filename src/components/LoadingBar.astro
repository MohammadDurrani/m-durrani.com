---
// src/components/LoadingBar.astro
---

<div id="loading-bar" class="loading-bar">
  <div class="loading-progress"></div>
</div>

<script is:inline>
  // Use is:inline to avoid Astro processing
  (function() {
    let isLoading = false;
    let progressTimer = null;
    
    function showLoadingBar() {
      if (isLoading) return;
      isLoading = true;
      
      const loadingBar = document.getElementById('loading-bar');
      const progress = loadingBar && loadingBar.querySelector('.loading-progress');
      
      if (loadingBar && progress) {
        loadingBar.style.opacity = '1';
        progress.style.width = '0%';
        
        // Animate progress
        let width = 0;
        progressTimer = setInterval(function() {
          width += Math.random() * 15;
          if (width > 90) width = 90;
          progress.style.width = width + '%';
        }, 100);
      }
    }
    
    function hideLoadingBar() {
      if (!isLoading) return;
      
      if (progressTimer) {
        clearInterval(progressTimer);
        progressTimer = null;
      }
      
      const loadingBar = document.getElementById('loading-bar');
      const progress = loadingBar && loadingBar.querySelector('.loading-progress');
      
      if (progress) {
        progress.style.width = '100%';
      }
      
      setTimeout(function() {
        if (loadingBar) {
          loadingBar.style.opacity = '0';
        }
        isLoading = false;
      }, 200);
    }
    
    function handleClick(e) {
      const link = e.target.closest('a[href]');
      if (!link || !link.href) return;
      
      // Skip non-navigation links
      if (link.href.startsWith('#') || 
          link.href.includes('mailto:') || 
          link.href.includes('tel:') ||
          link.target === '_blank') {
        return;
      }
      
      // Check if it's an internal link
      try {
        const linkUrl = new URL(link.href, window.location.origin);
        const currentUrl = new URL(window.location.href);
        
        if (linkUrl.origin === currentUrl.origin && 
            linkUrl.pathname !== currentUrl.pathname) {
          showLoadingBar();
          
          // Fallback cleanup
          setTimeout(hideLoadingBar, 3000);
        }
      } catch (error) {
        // Invalid URL, ignore
      }
    }
    
    function init() {
      // Clean up any existing listeners
      document.removeEventListener('click', handleClick);
      document.removeEventListener('astro:before-preparation', showLoadingBar);
      document.removeEventListener('astro:after-swap', hideLoadingBar);
      
      // Add listeners
      document.addEventListener('click', handleClick);
      document.addEventListener('astro:before-preparation', showLoadingBar);
      document.addEventListener('astro:after-swap', hideLoadingBar);
      document.addEventListener('astro:after-swap', init); // Re-init after navigation
    }
    
    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', init);
    } else {
      init();
    }
  })();
</script>

<style>
  .loading-bar {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px;
    z-index: 9999;
    opacity: 0;
    transition: opacity 0.2s ease;
    background: transparent;
  }
  
  .loading-progress {
    height: 100%;
    width: 0%;
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0.8) 0%,
      rgba(255, 255, 255, 1) 50%,
      rgba(255, 255, 255, 0.8) 100%
    );
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
    transition: width 0.3s ease;
    position: relative;
    overflow: hidden;
  }
  
  .loading-progress::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(255, 255, 255, 0.6) 50%,
      transparent 100%
    );
    animation: shimmer 1.5s infinite;
  }
  
  @keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }
</style>